{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Swallow.js","components/SwallowFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Swallow","swallowObj","isOwner","editing","setEditing","text","newSwallow","setNewSwallow","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","creatorName","autoFocus","src","class","faTrash","faPencilAlt","SwallowFactory","userObj","swallow","setSwallow","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","displayName","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","swallows","setSwallows","useEffect","orderBy","onSnapshot","snapshot","swallowArray","docs","map","data","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.781e3377.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password,\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? 'Create Account' : 'Sign In'}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? 'Sign In' : 'Create Account'}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import AuthForm from 'components/AuthForm';\r\nimport { authService } from 'fbase';\r\nimport { firebaseInstance } from 'fbase';\r\nimport React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === 'google') {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === 'github') {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={'white'}\r\n        size=\"4x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Swallow = ({ swallowObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newSwallow, setNewSwallow] = useState(swallowObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this swallow?');\r\n    if (ok) {\r\n      await dbService.doc(`swallows/${swallowObj.id}`).delete();\r\n      await storageService.refFromURL(swallowObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`swallows/${swallowObj.id}`).update({\r\n      text: newSwallow,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewSwallow(value);\r\n  };\r\n  return (\r\n    <div className=\"swallow\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container swallowEdit\">\r\n            <h4 className=\"username\">{swallowObj.creatorName}</h4>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your swallow\"\r\n              value={newSwallow}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Swallow\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4 className=\"username\"> {swallowObj.creatorName}'s swallows</h4>\r\n          <h4>{swallowObj.text}</h4>\r\n          {swallowObj.attachmentUrl && <img src={swallowObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"swallow__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Swallow;\r\n","import { dbService, storageService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst SwallowFactory = ({ userObj }) => {\r\n  const [swallow, setSwallow] = useState('');\r\n  const [attachment, setAttachment] = useState('');\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (swallow === '') {\r\n      return;\r\n    }\r\n    let attachmentUrl = '';\r\n    if (attachment !== '') {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, 'data_url');\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const swallowObj = {\r\n      text: swallow,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      creatorName: userObj.displayName,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection('swallows').add(swallowObj);\r\n    setSwallow('');\r\n    setAttachment('');\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSwallow(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    if (Boolean(theFile)) {\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n  const onClearAttachment = () => setAttachment('');\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={swallow}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SwallowFactory;\r\n","import { dbService } from 'fbase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Swallow from 'components/Swallow';\r\nimport SwallowFactory from 'components/SwallowFactory';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [swallows, setSwallows] = useState([]);\r\n  useEffect(() => {\r\n    dbService\r\n      .collection('swallows')\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        const swallowArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setSwallows(swallowArray);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <SwallowFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {swallows.map((swallow) => (\r\n          <Swallow\r\n            key={swallow.id}\r\n            swallowObj={swallow}\r\n            isOwner={swallow.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: 'flex', justifyContent: 'center', marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={'#FFFFFF'} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          {/* Twitter color #04AAFF */}\r\n          <FontAwesomeIcon icon={faUser} color={'#FFFFFF'} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : 'Profile'}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { authService } from 'fbase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.newDisplayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Navigation from 'components/Navigation';\r\nimport Profile from 'routes/Profile';\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: '100%',\r\n              margin: '0 auto',\r\n              marginTop: 80,\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              {' '}\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact=\"exact\" path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from 'react';\r\nimport AppRouter from 'components/Router';\r\nimport { authService } from 'fbase';\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      {init ? (\r\n        <AppRouter\r\n          refreshUser={refreshUser}\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n        />\r\n      ) : (\r\n        'Initializing....'\r\n      )}\r\n      <footer>&copy; {new Date().getFullYear()} Swallow</footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}